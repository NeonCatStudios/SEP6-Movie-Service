@page "/myFavList"
@using MovieApp.Authentication
@using MovieApp.Data
@using MovieApp.Data.Models.AuthenticationModels
@inject MovieController MovieController;
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [Authorize]
<h3>My Favorite Movies</h3>
@if (user != null)
{
    @foreach (Data.Movie movie in user.favList.favorites)
    {
        var apiId = @movie.id.ToString("D7");
        <MovieListItem Title="@movie.title" Year="@movie.year" Rating="@movie.rating" Votes="@movie.votes" ApiId="@apiId" />
    }
}

@code {
    public CachedUser user;

    protected override async Task OnInitializedAsync()
    {
        user = await ((AuthenticationProvider)AuthenticationStateProvider).GetUserFromCache();
        List<Data.Movie> favorites = await MovieController.GetFavListByUserId(user.UserId);

        user.favList = new FavList(favorites);
    }

}