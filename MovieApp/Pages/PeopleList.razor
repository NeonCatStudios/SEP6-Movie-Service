@page "/peopleList"
@using MovieApp.Data;
@using System.Diagnostics.CodeAnalysis
@using Microsoft.AspNetCore.WebUtilities
@inject PeopleController PeopleController;
@inject NavigationManager NavManager;

<PageTitle>People List</PageTitle>

<h1>People List</h1>
@*<form method="get" action="/peopleList">
    <input name="title" type="text"/>
    <button>Search</button>
</form>*@
@if (People == null)
{
    <div class="spinner"> <img src="img/loading.gif"/></div>
}
else
{
    @foreach (var item in People)
    {
        var apiId = @item.id.ToString("D7");
        <PeopleListItem Name="@item.name" Birth="@item.birth" ApiId="@apiId" />
    }
}
<span><button @onclick="@Back" class="BackButton">Back</button><label>...@Page...</label><button @onclick="@Next" class="NextButton">Next</button></span>



@code {
    [AllowNull]public List<Data.Person> People = null;
    //public string MovieTitleQuery;
    public int Page = 1;
    
    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);
        
       // if (query.TryGetValue("title", out var movieTitle)){ MovieTitleQuery = movieTitle; }

        //if (query.TryGetValue("page", out var page)){ Page = Convert.ToInt16(page); }

    }
    
    protected override async Task OnInitializedAsync()
    {
        People = null;
        await Task.Run(() => { People = PeopleController.getPeople(page: Page); 
        });
    }
    
    protected async Task Back()
    {
        if (Page > 1)
        {
            Page--;
            await OnInitializedAsync();
        }
    }

    protected async Task Next()
    {
        Page++;
        await OnInitializedAsync();
    }
}